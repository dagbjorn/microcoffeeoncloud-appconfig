# Logging
logging.level.root=INFO
logging.level.study.microcoffee=DEBUG
logging.level.study.microcoffee.order.health=INFO
logging.level.org.springframework.cloud.config=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.apache.http=INFO
logging.level.com.netflix=INFO
logging.level.web=INFO

# SSL
server.ssl.enabled=true
server.ssl.key-store=classpath:microcoffee-keystore.jks
server.ssl.key-password=12345678
server.ssl.key-alias=microcoffee.study

# Disable security on sensible Actuator endpoints.
management.security.enabled=false

# MongoDB
spring.data.mongodb.uri=mongodb://database.microcoffee.study:27017/microcoffee?ssl=true

# Eureka client
eureka.client.region=default
eureka.client.registryFetchIntervalSeconds=5
eureka.client.serviceUrl.defaultZone=https://discovery.microcoffee.study:8455/eureka/
# Default connect/read timeout is 5/8 secs
eureka.client.eureka-server-connect-timeout-seconds=60
eureka.client.eureka-server-read-timeout-seconds=60
# Must register with VM IP because our host names (on format hhhhhhh.microcoffee.study) are not available in DNS.
eureka.instance.hostname=192.168.99.127
eureka.instance.securePortEnabled=true
eureka.instance.securePort=${server.port}
eureka.instance.nonSecurePortEnabled=false
eureka.instance.nonSecurePort=${server.http.port}

# Downstream REST services
app.creditrating.url=https://creditrating
app.creditrating.timeout=30

# Resilience4J Retry
resilience4j.retry.instances.creditRating.maxRetryAttempts=3
resilience4j.retry.instances.creditRating.waitDuration=5s
resilience4j.retry.instances.creditRating.retryExceptions[0]=study.microcoffee.order.exception.ServiceCallFailedException

# Spring Security (OAuth2 client config)
spring.security.oauth2.client.provider.keycloak.issuer-uri=https://authserver.microcoffee.study:8456/auth/realms/microcoffee
spring.security.oauth2.client.registration.order-service.provider=keycloak
spring.security.oauth2.client.registration.order-service.client-id=order-service
spring.security.oauth2.client.registration.order-service.client-secret=${ORDER_CLIENT_SECRET}
spring.security.oauth2.client.registration.order-service.authorization-grant-type=client_credentials
